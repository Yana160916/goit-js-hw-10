{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Функція для підрахунку часу в об'єкті {days, hours, minutes, seconds}\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Функція для додавання ведучого нуля\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  let userSelectedDate;\n\n  const datetimePicker = document.getElementById('datetime-picker');\n  const startButton = document.querySelector('[data-start]');\n\n  // Конфігурація flatpickr\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n\n      if (userSelectedDate < new Date()) {\n        iziToast.warning({\n          title: 'Warning',\n          message: 'Please choose a date in the future'\n        });\n\n        startButton.disabled = true;\n      } else {\n        startButton.disabled = false;\n      }\n    },\n  };\n\n  flatpickr(datetimePicker, options);\n\n  startButton.addEventListener('click', function () {\n    if (userSelectedDate) {\n      startButton.disabled = true;\n      \n      const interval = setInterval(function () {\n        const currentDate = new Date();\n        const timeDifference = userSelectedDate - currentDate;\n\n        if (timeDifference <= 0) {\n          clearInterval(interval);\n          iziToast.success({\n            title: 'Success',\n            message: 'Countdown has ended!'\n          });\n        } else {\n          const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n          document.querySelector('[data-days]').textContent = addLeadingZero(days);\n          document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n          document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n          document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n        }\n      }, 1000);\n    }\n  });\n});\n"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","userSelectedDate","datetimePicker","startButton","flatpickr","selectedDates","iziToast","interval","timeDifference"],"mappings":"0IAMA,SAASA,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACpC,CAEA,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,IAAIC,EAEJ,MAAMC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EAwBzDC,EAAUF,EArBM,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAE9BJ,EAAmB,IAAI,MACzBK,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACnB,CAAS,EAEDH,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACL,CAEmC,EAEjCA,EAAY,iBAAiB,QAAS,UAAY,CAChD,GAAIF,EAAkB,CACpBE,EAAY,SAAW,GAEvB,MAAMI,EAAW,YAAY,UAAY,CAEvC,MAAMC,EAAiBP,EADH,IAAI,KAGxB,GAAIO,GAAkB,EACpB,cAAcD,CAAQ,EACtBD,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACrB,CAAW,MACI,CACL,KAAM,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUe,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YAAcT,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CAC9E,CACF,EAAE,GAAI,CACR,CACL,CAAG,CACH,CAAC"}